/// Firebase configuration for the Tech News application.
/// 
/// This file contains the default Firebase options for the application,
/// generated by the FlutterFire CLI. It provides platform-specific
/// configuration for Firebase services including Authentication,
/// Firestore, and Cloud Messaging.
/// 
/// The configuration includes settings for:
/// - Web platform
/// - Android platform
/// 
/// iOS, macOS, Windows, and Linux platforms are not supported in this
/// configuration and will throw UnsupportedError if attempted.
/// 
/// References:
/// - FlutterFire: https://firebase.flutter.dev/
/// - Firebase Options: https://firebase.flutter.dev/docs/core/overview
/// - Multi-Platform Configuration: https://firebase.flutter.dev/docs/core/usage#initializing-flutterfire
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
/// The default Firebase configuration for the Tech News application.
/// 
/// This class provides platform-specific Firebase configuration options
/// for initialising Firebase services in the application. It determines
/// the appropriate configuration based on the current platform.
/// 
/// The class handles:
/// - Platform detection (web, Android, iOS, etc.)
/// - Configuration selection based on platform
/// - Error handling for unsupported platforms
/// 
/// The configuration is used when initialising Firebase with:
/// ```dart
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
/// 
/// References:
/// - Firebase Initialisation: https://firebase.flutter.dev/docs/core/usage#initializing-flutterfire
/// - Platform Detection: https://api.flutter.dev/flutter/foundation/kIsWeb-constant.html
class DefaultFirebaseOptions {
  /// Gets the Firebase options for the current platform.
  /// 
  /// This getter:
  /// 1. Checks if running on web (kIsWeb)
  /// 2. If on web, returns the web configuration
  /// 3. Otherwise, switches on the defaultTargetPlatform:
  ///    * Android: Returns android configuration
  ///    * iOS: Throws UnsupportedError
  ///    * macOS: Throws UnsupportedError
  ///    * Windows: Throws UnsupportedError
  ///    * Linux: Throws UnsupportedError
  ///    * Any other platform: Throws UnsupportedError
  /// 
  /// The method ensures that Firebase is only initialised on supported
  /// platforms (web and Android in this configuration).
  /// 
  /// Returns the FirebaseOptions for the current platform.
  /// 
  /// References:
  /// - Platform Detection: https://api.flutter.dev/flutter/foundation/kIsWeb-constant.html
  /// - Target Platform: https://api.flutter.dev/flutter/foundation/TargetPlatform.html
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  /// Firebase configuration for the web platform.
  /// 
  /// This constant contains the Firebase options for the web version
  /// of the Tech News application. It includes settings for:
  /// - apiKey: Used for authenticating requests from the web app
  /// - appId: Unique identifier for the web application
  /// - messagingSenderId: Used for Firebase Cloud Messaging
  /// - projectId: Google Cloud project ID
  /// - authDomain: Domain for Firebase Authentication
  /// - storageBucket: Google Cloud Storage bucket for file storage
  /// - measurementId: Used for Google Analytics
  /// 
  /// These settings are automatically configured by the FlutterFire CLI
  /// and should not be modified manually unless reconfiguring Firebase.
  /// 
  /// References:
  /// - Firebase Web Setup: https://firebase.google.com/docs/web/setup
  /// - Firebase Configuration: https://firebase.google.com/docs/projects/api-keys
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyC4CWacSvD118AnlwQ21V2SNrsu950mBv0',
    appId: '1:1095806055802:web:ea3264e9f640ce50a552c3',
    messagingSenderId: '1095806055802',
    projectId: 'newsapp-2b5f7',
    authDomain: 'newsapp-2b5f7.firebaseapp.com',
    storageBucket: 'newsapp-2b5f7.firebasestorage.app',
    measurementId: 'G-N37GB71L99',
  );

  /// Firebase configuration for the Android platform.
  /// 
  /// This constant contains the Firebase options for the Android version
  /// of the Tech News application. It includes settings for:
  /// - apiKey: Used for authenticating requests from the Android app
  /// - appId: Unique identifier for the Android application
  /// - messagingSenderId: Used for Firebase Cloud Messaging
  /// - projectId: Google Cloud project ID
  /// - storageBucket: Google Cloud Storage bucket for file storage
  /// 
  /// Note: authDomain and measurementId are not required for Android
  /// applications and are therefore not included in this configuration.
  /// 
  /// These settings are automatically configured by the FlutterFire CLI
  /// and should not be modified manually unless reconfiguring Firebase.
  /// 
  /// References:
  /// - Firebase Android Setup: https://firebase.google.com/docs/android/setup
  /// - Firebase Configuration: https://firebase.google.com/docs/projects/api-keys
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBcvwEjBA1hLEv5ZqrRZnNqLVqyoU6IAkA',
    appId: '1:1095806055802:android:c33e120691490695a552c3',
    messagingSenderId: '1095806055802',
    projectId: 'newsapp-2b5f7',
    storageBucket: 'newsapp-2b5f7.firebasestorage.app',
  );
}
